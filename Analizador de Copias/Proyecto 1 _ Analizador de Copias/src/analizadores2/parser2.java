
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores2;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser2 extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser2() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser2(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser2(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\077\000\002\002\004\000\002\006\005\000\002\006" +
    "\005\000\002\006\006\000\002\024\003\000\002\002\004" +
    "\000\002\002\005\000\002\002\006\000\002\003\004\000" +
    "\002\004\004\000\002\005\003\000\002\005\012\000\002" +
    "\005\003\000\002\005\005\000\002\005\006\000\002\007" +
    "\004\000\002\007\004\000\002\007\004\000\002\017\007" +
    "\000\002\017\007\000\002\017\005\000\002\017\006\000" +
    "\002\017\004\000\002\025\004\000\002\025\006\000\002" +
    "\026\004\000\002\026\004\000\002\026\004\000\002\011" +
    "\012\000\002\011\003\000\002\021\004\000\002\021\004" +
    "\000\002\021\003\000\002\021\003\000\002\010\007\000" +
    "\002\010\010\000\002\010\010\000\002\010\007\000\002" +
    "\010\007\000\002\010\007\000\002\010\005\000\002\010" +
    "\006\000\002\010\004\000\002\012\005\000\002\012\003" +
    "\000\002\013\007\000\002\013\005\000\002\013\003\000" +
    "\002\014\005\000\002\014\005\000\002\014\003\000\002" +
    "\014\003\000\002\015\007\000\002\020\003\000\002\020" +
    "\004\000\002\020\004\000\002\022\003\000\002\022\003" +
    "\000\002\022\003\000\002\023\003\000\002\023\003\000" +
    "\002\016\022\000\002\016\006" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\274\000\010\027\007\030\005\037\004\001\002\000" +
    "\004\023\027\001\002\000\014\006\014\007\011\010\015" +
    "\011\012\012\013\001\002\000\004\002\023\001\002\000" +
    "\014\006\014\007\011\010\015\011\012\012\013\001\002" +
    "\000\060\006\014\007\011\010\015\011\012\012\013\024" +
    "\uffe0\027\uffe0\030\uffe0\031\uffe0\033\uffe0\034\uffe0\035\uffe0" +
    "\036\uffe0\037\uffe0\040\uffe0\041\uffe0\042\uffe0\045\uffe0\046" +
    "\uffe0\047\uffe0\050\uffe0\051\uffe0\052\uffe0\001\002\000\066" +
    "\006\uffc8\007\uffc8\010\uffc8\011\uffc8\012\uffc8\013\uffc8\016" +
    "\uffc8\020\uffc8\024\uffc8\027\uffc8\030\uffc8\031\uffc8\033\uffc8" +
    "\034\uffc8\035\uffc8\036\uffc8\037\uffc8\040\uffc8\041\uffc8\042" +
    "\uffc8\045\uffc8\046\uffc8\047\uffc8\050\uffc8\051\uffc8\052\uffc8" +
    "\001\002\000\066\006\uffc9\007\uffc9\010\uffc9\011\uffc9\012" +
    "\uffc9\013\uffc9\016\uffc9\020\uffc9\024\uffc9\027\uffc9\030\uffc9" +
    "\031\uffc9\033\uffc9\034\uffc9\035\uffc9\036\uffc9\037\uffc9\040" +
    "\uffc9\041\uffc9\042\uffc9\045\uffc9\046\uffc9\047\uffc9\050\uffc9" +
    "\051\uffc9\052\uffc9\001\002\000\066\006\uffc7\007\uffc7\010" +
    "\uffc7\011\uffc7\012\uffc7\013\uffc7\016\uffc7\020\uffc7\024\uffc7" +
    "\027\uffc7\030\uffc7\031\uffc7\033\uffc7\034\uffc7\035\uffc7\036" +
    "\uffc7\037\uffc7\040\uffc7\041\uffc7\042\uffc7\045\uffc7\046\uffc7" +
    "\047\uffc7\050\uffc7\051\uffc7\052\uffc7\001\002\000\064\006" +
    "\uffc6\007\uffc6\010\uffc6\011\uffc6\012\uffc6\021\uffc6\024\uffc6" +
    "\025\uffc6\027\uffc6\030\uffc6\031\uffc6\033\uffc6\034\uffc6\035" +
    "\uffc6\036\uffc6\037\uffc6\040\uffc6\041\uffc6\042\uffc6\045\uffc6" +
    "\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\001\002\000" +
    "\064\006\uffc5\007\uffc5\010\uffc5\011\uffc5\012\uffc5\021\uffc5" +
    "\024\uffc5\025\uffc5\027\uffc5\030\uffc5\031\uffc5\033\uffc5\034" +
    "\uffc5\035\uffc5\036\uffc5\037\uffc5\040\uffc5\041\uffc5\042\uffc5" +
    "\045\uffc5\046\uffc5\047\uffc5\050\uffc5\051\uffc5\052\uffc5\001" +
    "\002\000\060\006\014\007\011\010\015\011\012\012\013" +
    "\024\uffe1\027\uffe1\030\uffe1\031\uffe1\033\uffe1\034\uffe1\035" +
    "\uffe1\036\uffe1\037\uffe1\040\uffe1\041\uffe1\042\uffe1\045\uffe1" +
    "\046\uffe1\047\uffe1\050\uffe1\051\uffe1\052\uffe1\001\002\000" +
    "\010\027\007\030\005\037\004\001\002\000\004\002\uffff" +
    "\001\002\000\046\024\uffe3\027\uffe3\030\uffe3\031\uffe3\033" +
    "\uffe3\034\uffe3\035\uffe3\036\uffe3\037\uffe3\040\uffe3\041\uffe3" +
    "\042\uffe3\045\uffe3\046\uffe3\047\uffe3\050\uffe3\051\uffe3\052" +
    "\uffe3\001\002\000\046\024\uffe2\027\uffe2\030\uffe2\031\uffe2" +
    "\033\uffe2\034\uffe2\035\uffe2\036\uffe2\037\uffe2\040\uffe2\041" +
    "\uffe2\042\uffe2\045\uffe2\046\uffe2\047\uffe2\050\uffe2\051\uffe2" +
    "\052\uffe2\001\002\000\004\002\001\001\002\000\004\031" +
    "\025\001\002\000\010\027\007\030\005\037\004\001\002" +
    "\000\004\002\ufffe\001\002\000\012\027\034\030\032\033" +
    "\031\036\033\001\002\000\004\002\000\001\002\000\004" +
    "\014\270\001\002\000\014\006\014\007\011\010\015\011" +
    "\012\012\013\001\002\000\004\023\041\001\002\000\014" +
    "\006\014\007\011\010\015\011\012\012\013\001\002\000" +
    "\004\002\uffe4\001\002\000\010\027\034\030\032\036\033" +
    "\001\002\000\004\002\ufffb\001\002\000\004\002\ufffc\001" +
    "\002\000\014\024\046\027\047\030\044\034\042\035\043" +
    "\001\002\000\010\007\011\011\012\012\013\001\002\000" +
    "\010\007\011\011\012\012\013\001\002\000\014\006\014" +
    "\007\011\010\015\011\012\012\013\001\002\000\004\002" +
    "\ufff9\001\002\000\020\024\054\027\060\030\062\033\056" +
    "\040\055\041\057\042\063\001\002\000\014\006\014\007" +
    "\011\010\015\011\012\012\013\001\002\000\014\024\046" +
    "\027\047\030\044\034\042\035\043\001\002\000\004\002" +
    "\uffed\001\002\000\004\002\ufff5\001\002\000\004\002\uffeb" +
    "\001\002\000\004\002\ufffd\001\002\000\004\023\064\001" +
    "\002\000\004\014\215\001\002\000\004\023\064\001\002" +
    "\000\014\006\014\007\011\010\015\011\012\012\013\001" +
    "\002\000\004\002\ufff7\001\002\000\014\006\014\007\011" +
    "\010\015\011\012\012\013\001\002\000\004\023\064\001" +
    "\002\000\024\024\071\027\075\030\076\045\066\046\074" +
    "\047\073\050\070\051\072\052\067\001\002\000\004\002" +
    "\ufff1\001\002\000\004\022\203\001\002\000\004\022\177" +
    "\001\002\000\004\022\161\001\002\000\020\024\054\027" +
    "\060\030\062\033\056\040\055\041\057\042\063\001\002" +
    "\000\004\022\121\001\002\000\004\022\115\001\002\000" +
    "\004\022\105\001\002\000\014\006\014\007\011\010\015" +
    "\011\012\012\013\001\002\000\014\006\014\007\011\010" +
    "\015\011\012\012\013\001\002\000\004\002\ufff8\001\002" +
    "\000\004\031\101\001\002\000\024\024\071\027\075\030" +
    "\076\045\066\046\074\047\073\050\070\051\072\052\067" +
    "\001\002\000\004\002\uffd8\001\002\000\024\024\071\027" +
    "\075\030\076\045\066\046\074\047\073\050\070\051\072" +
    "\052\067\001\002\000\004\002\uffd9\001\002\000\004\013" +
    "\107\001\002\000\004\021\113\001\002\000\010\007\011" +
    "\011\012\012\013\001\002\000\004\021\uffd5\001\002\000" +
    "\004\013\112\001\002\000\004\021\uffd6\001\002\000\024" +
    "\024\071\027\075\030\076\045\066\046\074\047\073\050" +
    "\070\051\072\052\067\001\002\000\004\002\uffdb\001\002" +
    "\000\004\013\107\001\002\000\004\021\117\001\002\000" +
    "\024\024\071\027\075\030\076\045\066\046\074\047\073" +
    "\050\070\051\072\052\067\001\002\000\004\002\uffda\001" +
    "\002\000\004\004\122\001\002\000\012\005\124\006\014" +
    "\010\015\032\125\001\002\000\004\025\156\001\002\000" +
    "\004\021\uffce\001\002\000\004\023\135\001\002\000\004" +
    "\021\uffcf\001\002\000\004\025\133\001\002\000\004\021" +
    "\131\001\002\000\024\024\071\027\075\030\076\045\066" +
    "\046\074\047\073\050\070\051\072\052\067\001\002\000" +
    "\004\002\uffdd\001\002\000\012\005\124\006\014\010\015" +
    "\032\125\001\002\000\004\021\uffd0\001\002\000\006\043" +
    "\136\044\137\001\002\000\004\025\141\001\002\000\004" +
    "\024\140\001\002\000\004\021\uffc3\001\002\000\004\013" +
    "\142\001\002\000\010\007\011\011\012\012\013\001\002" +
    "\000\004\013\144\001\002\000\004\025\145\001\002\000" +
    "\004\013\146\001\002\000\010\007\011\011\012\012\013" +
    "\001\002\000\004\013\150\001\002\000\004\025\151\001" +
    "\002\000\004\013\152\001\002\000\010\007\011\011\012" +
    "\012\013\001\002\000\004\013\154\001\002\000\004\024" +
    "\155\001\002\000\004\021\uffc4\001\002\000\012\005\124" +
    "\006\014\010\015\032\125\001\002\000\004\021\uffd1\001" +
    "\002\000\004\002\uffd7\001\002\000\004\004\162\001\002" +
    "\000\006\005\163\013\164\001\002\000\004\021\uffd2\001" +
    "\002\000\010\007\011\011\012\012\013\001\002\000\004" +
    "\025\171\001\002\000\004\021\167\001\002\000\024\024" +
    "\071\027\075\030\076\045\066\046\074\047\073\050\070" +
    "\051\072\052\067\001\002\000\004\002\uffde\001\002\000" +
    "\006\005\163\013\164\001\002\000\004\021\uffd3\001\002" +
    "\000\004\013\174\001\002\000\004\025\175\001\002\000" +
    "\006\005\163\013\164\001\002\000\004\021\uffd4\001\002" +
    "\000\004\013\107\001\002\000\004\021\201\001\002\000" +
    "\024\024\071\027\075\030\076\045\066\046\074\047\073" +
    "\050\070\051\072\052\067\001\002\000\004\002\uffdc\001" +
    "\002\000\004\013\107\001\002\000\004\021\205\001\002" +
    "\000\024\024\071\027\075\030\076\045\066\046\074\047" +
    "\073\050\070\051\072\052\067\001\002\000\004\002\uffdf" +
    "\001\002\000\004\031\210\001\002\000\020\024\054\027" +
    "\060\030\062\033\056\040\055\041\057\042\063\001\002" +
    "\000\004\002\ufff3\001\002\000\020\024\054\027\060\030" +
    "\062\033\056\040\055\041\057\042\063\001\002\000\004" +
    "\002\ufff4\001\002\000\004\002\ufff0\001\002\000\004\013" +
    "\217\001\002\000\004\025\230\001\002\000\004\017\220" +
    "\001\002\000\004\022\221\001\002\000\012\007\011\011" +
    "\012\012\013\020\223\001\002\000\004\013\227\001\002" +
    "\000\012\007\011\011\012\012\013\020\223\001\002\000" +
    "\014\007\011\011\012\012\013\013\uffcc\020\223\001\002" +
    "\000\004\013\uffcb\001\002\000\004\013\uffca\001\002\000" +
    "\006\015\uffcd\025\uffcd\001\002\000\004\013\217\001\002" +
    "\000\004\015\232\001\002\000\004\021\233\001\002\000" +
    "\020\024\054\027\060\030\062\033\056\040\055\041\057" +
    "\042\063\001\002\000\004\002\ufff6\001\002\000\004\002" +
    "\ufff2\001\002\000\004\031\237\001\002\000\014\024\046" +
    "\027\047\030\044\034\042\035\043\001\002\000\004\002" +
    "\uffec\001\002\000\004\016\242\001\002\000\010\006\014" +
    "\010\015\032\125\001\002\000\004\021\252\001\002\000" +
    "\014\024\046\027\047\030\044\034\042\035\043\001\002" +
    "\000\004\021\250\001\002\000\004\021\247\001\002\000" +
    "\014\024\uffe8\027\uffe8\030\uffe8\034\uffe8\035\uffe8\001\002" +
    "\000\014\024\uffe6\027\uffe6\030\uffe6\034\uffe6\035\uffe6\001" +
    "\002\000\004\002\uffee\001\002\000\014\024\uffe7\027\uffe7" +
    "\030\uffe7\034\uffe7\035\uffe7\001\002\000\004\016\254\001" +
    "\002\000\004\013\255\001\002\000\010\007\011\011\012" +
    "\012\013\001\002\000\004\021\261\001\002\000\014\024" +
    "\046\027\047\030\044\034\042\035\043\001\002\000\004" +
    "\002\uffef\001\002\000\014\024\uffea\027\uffea\030\uffea\034" +
    "\uffea\035\uffea\001\002\000\004\013\263\001\002\000\004" +
    "\021\264\001\002\000\014\024\uffe9\027\uffe9\030\uffe9\034" +
    "\uffe9\035\uffe9\001\002\000\004\031\266\001\002\000\010" +
    "\027\034\030\032\036\033\001\002\000\004\002\ufffa\001" +
    "\002\000\004\013\217\001\002\000\004\025\272\001\002" +
    "\000\004\013\217\001\002\000\004\015\274\001\002\000" +
    "\004\021\275\001\002\000\012\027\034\030\032\033\031" +
    "\036\033\001\002\000\004\002\uffe5\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\274\000\004\006\005\001\001\000\002\001\001\000" +
    "\010\021\023\022\015\023\007\001\001\000\002\001\001" +
    "\000\010\021\016\022\015\023\007\001\001\000\010\021" +
    "\021\022\015\023\007\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\021\020\022\015\023\007\001\001\000\004" +
    "\006\017\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\025\001\001\000\002\001\001\000\006\002\034\011" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\021\264\022\015\023\007\001\001\000\004\003\037\001" +
    "\001\000\010\021\035\022\015\023\007\001\001\000\002" +
    "\001\001\000\004\002\036\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\044\001\001\000\004\022\252" +
    "\001\001\000\004\022\240\001\001\000\010\021\235\022" +
    "\015\023\007\001\001\000\002\001\001\000\010\005\052" +
    "\007\060\024\051\001\001\000\010\021\047\022\015\023" +
    "\007\001\001\000\004\017\050\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\234\001\001\000\002\001\001\000\004\004\213" +
    "\001\001\000\010\021\211\022\015\023\007\001\001\000" +
    "\002\001\001\000\010\021\206\022\015\023\007\001\001" +
    "\000\004\004\064\001\001\000\004\010\076\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\005\157\007\060\024\051\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\021\102\022\015\023\007\001\001\000\010\021\077\022" +
    "\015\023\007\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\010\101\001\001\000\002\001\001\000\004\010" +
    "\103\001\001\000\002\001\001\000\006\012\105\027\107" +
    "\001\001\000\002\001\001\000\004\022\110\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\113\001\001\000\002\001\001\000\006\012\115\027" +
    "\107\001\001\000\002\001\001\000\004\010\117\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\014\127\016" +
    "\125\023\122\027\126\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\131\001\001\000\002" +
    "\001\001\000\012\014\133\016\125\023\122\027\126\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\022\142\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\022\146\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\022\152" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\014\156\016\125\023\122\027\126\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\013\165\027\164\001\001\000\002\001\001\000\004" +
    "\022\172\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\010\167\001\001\000\002\001\001\000\006\013\171" +
    "\027\164\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\013\175\027\164\001\001\000\002" +
    "\001\001\000\006\012\177\027\107\001\001\000\002\001" +
    "\001\000\004\010\201\001\001\000\002\001\001\000\006" +
    "\012\203\027\107\001\001\000\002\001\001\000\004\010" +
    "\205\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\005\210\007\060\024\051\001\001\000\002\001\001\000" +
    "\010\005\212\007\060\024\051\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\015\215\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\020\221" +
    "\022\223\001\001\000\002\001\001\000\006\020\225\022" +
    "\223\001\001\000\006\020\224\022\223\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\015" +
    "\230\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\005\233\007\060\024\051\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\017\237\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\016\244\023" +
    "\242\026\243\027\245\001\001\000\002\001\001\000\004" +
    "\017\250\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\025\256\027\255\001" +
    "\001\000\004\022\261\001\001\000\002\001\001\000\004" +
    "\017\257\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\002\266\001\001\000\002\001\001\000" +
    "\004\015\270\001\001\000\002\001\001\000\004\015\272" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\002" +
    "\034\011\275\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser2$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser2$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser2$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public void syntax_error(Symbol s){
        System.out.println("Erroe Sintactico en la linea "+s.left+" Columna "+s.right+". No se esperaba este componente: "+s.value+".");
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser2$actions {
  private final parser2 parser;

  /** Constructor */
  CUP$parser2$actions(parser2 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action_part00000000(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser2$result;

      /* select the action based on the action number */
      switch (CUP$parser2$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= InicioPrimero EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		RESULT = start_val;
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser2$parser.done_parsing();
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // InicioPrimero ::= GENERARREPORTEESTADISTICO LLAVE1 PalabraReservadaInstruccion 
            {
              Object RESULT =null;
		int prleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int prright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object pr = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("InicioPrimero",4, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // InicioPrimero ::= COMENTARIOS Comentario InicioPrimero 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("InicioPrimero",4, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // InicioPrimero ::= COMENINICIAL Comentario COMENFINAL InicioPrimero 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("InicioPrimero",4, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Terminacion ::= LLAVE2 
            {
              Object RESULT =null;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Terminacion",18, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Inicio ::= DEFINIRGLOBALES LlavesAp 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Inicio ::= COMENTARIOS Comentario Inicio 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Inicio ::= COMENINICIAL Comentario COMENFINAL Inicio 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // LlavesAp ::= LLAVE1 PalabraReservada 
            {
              Object RESULT =null;
		int prleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int prright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object pr = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesAp",1, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // LlavesGra ::= LLAVE1 PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int prleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int prright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object pr = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesGra",2, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // LlavesFN ::= PalabraInicial 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // LlavesFN ::= COMPARE PAR1 Direccion COMA Direccion PAR2 PUNTOYCOMA LlavesFN 
            {
              Object RESULT =null;
		int dic1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)).left;
		int dic1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)).right;
		Object dic1 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-5)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-3)).value;
		int pileft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-7)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // LlavesFN ::= Terminacion 
            {
              Object RESULT =null;
		int terleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int terright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object ter = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // LlavesFN ::= COMENTARIOS Comentario LlavesFN 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // LlavesFN ::= COMENINICIAL Comentario COMENFINAL LlavesFN 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // PalabraInicial ::= GRAFICABARRAS LlavesGra 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraInicial",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // PalabraInicial ::= GRAFICALINEAS LlavesGra 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraInicial",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PalabraInicial ::= GRAFICAPIE LlavesGra 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraInicial",5, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PalabraReservada ::= STRING Alfabeto IGUAL CaracterS PalabraReservada 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-3)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // PalabraReservada ::= DOUBLE Alfabeto IGUAL CaracterD PalabraReservada 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-3)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // PalabraReservada ::= COMENTARIOS Comentario PalabraReservada 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // PalabraReservada ::= COMENINICIAL Comentario COMENFINAL PalabraReservada 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // PalabraReservada ::= LLAVE2 LlavesFN 
            {
              Object RESULT =null;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object fin = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // CaracterS ::= VariablesGlobales PUNTOYCOMA 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // CaracterS ::= CADENAS Alfabeto CADENAS PUNTOYCOMA 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CaracterD ::= VariablesGlobales PUNTOYCOMA 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("CaracterD",20, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CaracterD ::= Numero PUNTOYCOMA 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("CaracterD",20, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CaracterD ::= Buscador PUNTOYCOMA 
            {
              Object RESULT =null;
		int busleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int busright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object bus = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("CaracterD",20, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // PalabraReservadaInstruccion ::= COMPARE PAR1 Direccion COMA Direccion PAR2 PUNTOYCOMA PalabraReservadaInstruccion 
            {
              Object RESULT =null;
		int dic1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)).left;
		int dic1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)).right;
		Object dic1 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-5)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-3)).value;
		int pileft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaInstruccion",7, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-7)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // PalabraReservadaInstruccion ::= Inicio 
            {
              Object RESULT =null;
		int inileft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int iniright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object ini = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaInstruccion",7, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Comentario ::= Alfabeto Comentario 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Comentario ::= Numero Comentario 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Comentario ::= Alfabeto 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Comentario ::= Numero 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // PalabraReservadaGrafica ::= TITULO DOSPUNTOS TituloGrafica PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int titleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int titright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object tit = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // PalabraReservadaGrafica ::= EJEX DOSPUNTOS CORCHETE1 EjeVariableX PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // PalabraReservadaGrafica ::= VALORES DOSPUNTOS CORCHETE1 Valor PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-5)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // PalabraReservadaGrafica ::= ARCHIVO DOSPUNTOS TituloGrafica PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int archleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int archright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object arch = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // PalabraReservadaGrafica ::= TITULOX DOSPUNTOS TituloGrafica PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int txleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int txright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object tx = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // PalabraReservadaGrafica ::= TITULOY DOSPUNTOS TituloGrafica PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int tyleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int tyright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object ty = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // PalabraReservadaGrafica ::= COMENTARIOS Comentario PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // PalabraReservadaGrafica ::= COMENINICIAL Comentario COMENFINAL PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // PalabraReservadaGrafica ::= LLAVE2 LlavesFN 
            {
              Object RESULT =null;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object fin = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // TituloGrafica ::= CADENAS Alfabeto CADENAS 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("TituloGrafica",8, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // TituloGrafica ::= VariablesGlobales 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("TituloGrafica",8, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // EjeVariableX ::= CADENAS Alfabeto CADENAS COMA EjeVariableX 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-3)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("EjeVariableX",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // EjeVariableX ::= VariablesGlobales COMA EjeVariableX 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("EjeVariableX",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // EjeVariableX ::= CORCHETE2 
            {
              Object RESULT =null;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("EjeVariableX",9, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Valor ::= Numero COMA Valor 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Valor",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Valor ::= VariablesGlobales COMA Valor 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Valor",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Valor ::= Buscador 
            {
              Object RESULT =null;
		int busleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int busright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object bus = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Valor",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Valor ::= CORCHETE2 
            {
              Object RESULT =null;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Valor",10, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Direccion ::= CADENAS CDM DOSPUNTOS Direccion2 CADENAS 
            {
              Object RESULT =null;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Direccion",11, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-4)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Direccion2 ::= Alfabeto 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Direccion2",14, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Direccion2 ::= Alfabeto Direccion2 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-1)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Direccion2",14, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Direccion2 ::= DIVIDIDO Direccion2 
            {
              Object RESULT =null;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Direccion2",14, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-1)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Alfabeto ::= LETRAS 
            {
              Object RESULT =null;
		int letleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int letright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String let = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Alfabeto",16, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Alfabeto ::= OTROENTERO 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Alfabeto",16, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Alfabeto ::= COMBINACION 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String com = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Alfabeto",16, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Numero ::= ENTEROS 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Numero",17, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Numero ::= DECIMALES 
            {
              Object RESULT =null;
		int decleft = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).left;
		int decright = ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()).right;
		String dec = (String)((java_cup.runtime.Symbol) CUP$parser2$stack.peek()).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Numero",17, ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Buscador ::= MONEDA LLAVE1 PUNTAJEESPECIFICO COMA CADENAS Alfabeto CADENAS COMA CADENAS Alfabeto CADENAS COMA CADENAS Alfabeto CADENAS LLAVE2 
            {
              Object RESULT =null;
		int alf1left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-10)).left;
		int alf1right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-10)).right;
		Object alf1 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-10)).value;
		int alf2left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-6)).left;
		int alf2right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-6)).right;
		Object alf2 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-6)).value;
		int alf3left = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).left;
		int alf3right = ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-2)).right;
		Object alf3 = (Object)((java_cup.runtime.Symbol) CUP$parser2$stack.elementAt(CUP$parser2$top-2)).value;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Buscador",12, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-15)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Buscador ::= MONEDA LLAVE1 PUNTAJEGENERAL LLAVE2 
            {
              Object RESULT =null;
		
              CUP$parser2$result = parser.getSymbolFactory().newSymbol("Buscador",12, ((java_cup.runtime.Symbol)CUP$parser2$stack.elementAt(CUP$parser2$top-3)), ((java_cup.runtime.Symbol)CUP$parser2$stack.peek()), RESULT);
            }
          return CUP$parser2$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser2$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser2$do_action(
    int                        CUP$parser2$act_num,
    java_cup.runtime.lr_parser CUP$parser2$parser,
    java.util.Stack            CUP$parser2$stack,
    int                        CUP$parser2$top)
    throws java.lang.Exception
    {
              return CUP$parser2$do_action_part00000000(
                               CUP$parser2$act_num,
                               CUP$parser2$parser,
                               CUP$parser2$stack,
                               CUP$parser2$top);
    }
}

}

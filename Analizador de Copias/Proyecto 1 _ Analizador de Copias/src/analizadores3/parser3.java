
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package analizadores3;

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser3 extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser3() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser3(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser3(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\131\000\002\002\004\000\002\006\005\000\002\006" +
    "\005\000\002\006\006\000\002\024\003\000\002\002\004" +
    "\000\002\002\005\000\002\002\006\000\002\003\004\000" +
    "\002\004\004\000\002\005\003\000\002\005\012\000\002" +
    "\005\003\000\002\005\005\000\002\005\006\000\002\007" +
    "\004\000\002\007\004\000\002\007\004\000\002\017\006" +
    "\000\002\017\006\000\002\017\005\000\002\017\006\000" +
    "\002\017\004\000\002\034\004\000\002\034\004\000\002" +
    "\034\003\000\002\025\004\000\002\025\005\000\002\025" +
    "\004\000\002\025\004\000\002\025\004\000\002\026\004" +
    "\000\002\026\004\000\002\026\004\000\002\011\012\000" +
    "\002\011\003\000\002\021\004\000\002\021\004\000\002" +
    "\021\003\000\002\021\003\000\002\010\006\000\002\010" +
    "\010\000\002\010\010\000\002\010\006\000\002\010\006" +
    "\000\002\010\006\000\002\010\005\000\002\010\006\000" +
    "\002\010\004\000\002\012\003\000\002\012\003\000\002" +
    "\035\004\000\002\035\004\000\002\035\004\000\002\035" +
    "\003\000\002\013\003\000\002\013\005\000\002\031\004" +
    "\000\002\031\004\000\002\031\004\000\002\031\004\000" +
    "\002\031\003\000\002\014\003\000\002\014\005\000\002" +
    "\032\004\000\002\032\004\000\002\032\004\000\002\032" +
    "\004\000\002\032\003\000\002\032\003\000\002\015\005" +
    "\000\002\020\005\000\002\020\004\000\002\020\003\000" +
    "\002\027\004\000\002\027\004\000\002\027\004\000\002" +
    "\027\003\000\002\022\003\000\002\022\003\000\002\022" +
    "\003\000\002\023\003\000\002\023\003\000\002\016\014" +
    "\000\002\016\006\000\002\030\005\000\002\030\004\000" +
    "\002\030\004\000\002\030\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\326\000\010\030\007\031\005\040\004\001\002\000" +
    "\004\023\027\001\002\000\014\006\013\007\011\010\014" +
    "\011\012\012\015\001\002\000\004\002\023\001\002\000" +
    "\014\006\013\007\011\010\014\011\012\012\015\001\002" +
    "\000\060\006\013\007\011\010\014\011\012\012\015\024" +
    "\uffda\030\uffda\031\uffda\032\uffda\034\uffda\035\uffda\036\uffda" +
    "\037\uffda\040\uffda\041\uffda\042\uffda\043\uffda\046\uffda\047" +
    "\uffda\050\uffda\051\uffda\052\uffda\053\uffda\001\002\000\102" +
    "\005\uffb2\006\uffb2\007\uffb2\010\uffb2\011\uffb2\012\uffb2\013" +
    "\uffb2\016\uffb2\020\uffb2\021\uffb2\022\uffb2\024\uffb2\025\uffb2" +
    "\027\uffb2\030\uffb2\031\uffb2\032\uffb2\033\uffb2\034\uffb2\035" +
    "\uffb2\036\uffb2\037\uffb2\040\uffb2\041\uffb2\042\uffb2\043\uffb2" +
    "\046\uffb2\047\uffb2\050\uffb2\051\uffb2\052\uffb2\053\uffb2\001" +
    "\002\000\102\005\uffb3\006\uffb3\007\uffb3\010\uffb3\011\uffb3" +
    "\012\uffb3\013\uffb3\016\uffb3\020\uffb3\021\uffb3\022\uffb3\024" +
    "\uffb3\025\uffb3\027\uffb3\030\uffb3\031\uffb3\032\uffb3\033\uffb3" +
    "\034\uffb3\035\uffb3\036\uffb3\037\uffb3\040\uffb3\041\uffb3\042" +
    "\uffb3\043\uffb3\046\uffb3\047\uffb3\050\uffb3\051\uffb3\052\uffb3" +
    "\053\uffb3\001\002\000\100\005\uffb0\006\uffb0\007\uffb0\010" +
    "\uffb0\011\uffb0\012\uffb0\013\uffb0\016\uffb0\020\uffb0\021\uffb0" +
    "\024\uffb0\025\uffb0\027\uffb0\030\uffb0\031\uffb0\032\uffb0\033" +
    "\uffb0\034\uffb0\035\uffb0\036\uffb0\037\uffb0\040\uffb0\041\uffb0" +
    "\042\uffb0\043\uffb0\046\uffb0\047\uffb0\050\uffb0\051\uffb0\052" +
    "\uffb0\053\uffb0\001\002\000\100\005\uffaf\006\uffaf\007\uffaf" +
    "\010\uffaf\011\uffaf\012\uffaf\013\uffaf\016\uffaf\020\uffaf\021" +
    "\uffaf\024\uffaf\025\uffaf\027\uffaf\030\uffaf\031\uffaf\032\uffaf" +
    "\033\uffaf\034\uffaf\035\uffaf\036\uffaf\037\uffaf\040\uffaf\041" +
    "\uffaf\042\uffaf\043\uffaf\046\uffaf\047\uffaf\050\uffaf\051\uffaf" +
    "\052\uffaf\053\uffaf\001\002\000\102\005\uffb1\006\uffb1\007" +
    "\uffb1\010\uffb1\011\uffb1\012\uffb1\013\uffb1\016\uffb1\020\uffb1" +
    "\021\uffb1\022\uffb1\024\uffb1\025\uffb1\027\uffb1\030\uffb1\031" +
    "\uffb1\032\uffb1\033\uffb1\034\uffb1\035\uffb1\036\uffb1\037\uffb1" +
    "\040\uffb1\041\uffb1\042\uffb1\043\uffb1\046\uffb1\047\uffb1\050" +
    "\uffb1\051\uffb1\052\uffb1\053\uffb1\001\002\000\060\006\013" +
    "\007\011\010\014\011\012\012\015\024\uffdb\030\uffdb\031" +
    "\uffdb\032\uffdb\034\uffdb\035\uffdb\036\uffdb\037\uffdb\040\uffdb" +
    "\041\uffdb\042\uffdb\043\uffdb\046\uffdb\047\uffdb\050\uffdb\051" +
    "\uffdb\052\uffdb\053\uffdb\001\002\000\010\030\007\031\005" +
    "\040\004\001\002\000\004\002\uffff\001\002\000\046\024" +
    "\uffdd\030\uffdd\031\uffdd\032\uffdd\034\uffdd\035\uffdd\036\uffdd" +
    "\037\uffdd\040\uffdd\041\uffdd\042\uffdd\043\uffdd\046\uffdd\047" +
    "\uffdd\050\uffdd\051\uffdd\052\uffdd\053\uffdd\001\002\000\046" +
    "\024\uffdc\030\uffdc\031\uffdc\032\uffdc\034\uffdc\035\uffdc\036" +
    "\uffdc\037\uffdc\040\uffdc\041\uffdc\042\uffdc\043\uffdc\046\uffdc" +
    "\047\uffdc\050\uffdc\051\uffdc\052\uffdc\053\uffdc\001\002\000" +
    "\004\002\001\001\002\000\004\032\025\001\002\000\010" +
    "\030\007\031\005\040\004\001\002\000\004\002\ufffe\001" +
    "\002\000\012\030\034\031\032\034\031\037\033\001\002" +
    "\000\004\002\000\001\002\000\004\014\322\001\002\000" +
    "\014\006\013\007\011\010\014\011\012\012\015\001\002" +
    "\000\004\023\041\001\002\000\014\006\013\007\011\010" +
    "\014\011\012\012\015\001\002\000\004\002\uffde\001\002" +
    "\000\010\030\034\031\032\037\033\001\002\000\004\002" +
    "\ufffb\001\002\000\004\002\ufffc\001\002\000\014\024\046" +
    "\030\047\031\044\035\042\036\043\001\002\000\016\006" +
    "\013\007\011\010\014\011\012\012\015\016\265\001\002" +
    "\000\016\006\013\007\011\010\014\011\012\012\015\016" +
    "\265\001\002\000\014\006\013\007\011\010\014\011\012" +
    "\012\015\001\002\000\004\002\ufff9\001\002\000\020\024" +
    "\054\030\060\031\062\034\056\041\055\042\057\043\063" +
    "\001\002\000\014\006\013\007\011\010\014\011\012\012" +
    "\015\001\002\000\014\024\046\030\047\031\044\035\042" +
    "\036\043\001\002\000\004\002\uffed\001\002\000\004\002" +
    "\ufff5\001\002\000\004\002\uffeb\001\002\000\004\002\ufffd" +
    "\001\002\000\004\023\064\001\002\000\004\014\231\001" +
    "\002\000\004\023\064\001\002\000\014\006\013\007\011" +
    "\010\014\011\012\012\015\001\002\000\004\002\ufff7\001" +
    "\002\000\014\006\013\007\011\010\014\011\012\012\015" +
    "\001\002\000\004\023\064\001\002\000\024\024\071\030" +
    "\075\031\076\046\066\047\074\050\073\051\070\052\072" +
    "\053\067\001\002\000\004\002\ufff1\001\002\000\004\022" +
    "\220\001\002\000\004\022\215\001\002\000\004\022\173" +
    "\001\002\000\020\024\054\030\060\031\062\034\056\041" +
    "\055\042\057\043\063\001\002\000\004\022\124\001\002" +
    "\000\004\022\121\001\002\000\004\022\105\001\002\000" +
    "\014\006\013\007\011\010\014\011\012\012\015\001\002" +
    "\000\014\006\013\007\011\010\014\011\012\012\015\001" +
    "\002\000\004\002\ufff8\001\002\000\004\032\101\001\002" +
    "\000\024\024\071\030\075\031\076\046\066\047\074\050" +
    "\073\051\070\052\072\053\067\001\002\000\004\002\uffd2" +
    "\001\002\000\024\024\071\030\075\031\076\046\066\047" +
    "\074\050\073\051\070\052\072\053\067\001\002\000\004" +
    "\002\uffd3\001\002\000\020\006\013\007\011\010\014\011" +
    "\012\012\015\013\106\021\111\001\002\000\020\006\013" +
    "\007\011\010\014\011\012\012\015\013\106\021\111\001" +
    "\002\000\024\024\071\030\075\031\076\046\066\047\074" +
    "\050\073\051\070\052\072\053\067\001\002\000\024\024" +
    "\uffcf\030\uffcf\031\uffcf\046\uffcf\047\uffcf\050\uffcf\051\uffcf" +
    "\052\uffcf\053\uffcf\001\002\000\024\024\uffcb\030\uffcb\031" +
    "\uffcb\046\uffcb\047\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb" +
    "\001\002\000\024\024\uffd0\030\uffd0\031\uffd0\046\uffd0\047" +
    "\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\001\002\000\020" +
    "\006\013\007\011\010\014\011\012\012\015\013\106\021" +
    "\111\001\002\000\020\006\013\007\011\010\014\011\012" +
    "\012\015\013\106\021\111\001\002\000\024\024\uffce\030" +
    "\uffce\031\uffce\046\uffce\047\uffce\050\uffce\051\uffce\052\uffce" +
    "\053\uffce\001\002\000\024\024\uffcd\030\uffcd\031\uffcd\046" +
    "\uffcd\047\uffcd\050\uffcd\051\uffcd\052\uffcd\053\uffcd\001\002" +
    "\000\004\002\uffd5\001\002\000\024\024\uffcc\030\uffcc\031" +
    "\uffcc\046\uffcc\047\uffcc\050\uffcc\051\uffcc\052\uffcc\053\uffcc" +
    "\001\002\000\020\006\013\007\011\010\014\011\012\012" +
    "\015\013\106\021\111\001\002\000\024\024\071\030\075" +
    "\031\076\046\066\047\074\050\073\051\070\052\072\053" +
    "\067\001\002\000\004\002\uffd4\001\002\000\004\004\125" +
    "\001\002\000\024\005\133\006\013\007\011\010\014\011" +
    "\012\012\015\013\126\025\127\033\137\001\002\000\024" +
    "\005\133\006\013\007\011\010\014\011\012\012\015\013" +
    "\126\025\127\033\137\001\002\000\024\005\133\006\013" +
    "\007\011\010\014\011\012\012\015\013\126\025\127\033" +
    "\137\001\002\000\004\021\166\001\002\000\004\021\uffbc" +
    "\001\002\000\004\025\164\001\002\000\004\021\uffbd\001" +
    "\002\000\004\021\uffc3\001\002\000\024\005\133\006\013" +
    "\007\011\010\014\011\012\012\015\013\126\025\127\033" +
    "\137\001\002\000\024\005\133\006\013\007\011\010\014" +
    "\011\012\012\015\013\126\025\127\033\137\001\002\000" +
    "\004\023\140\001\002\000\006\044\141\045\142\001\002" +
    "\000\004\025\144\001\002\000\004\024\143\001\002\000" +
    "\004\021\uffad\001\002\000\016\006\013\007\011\010\014" +
    "\011\012\012\015\013\145\001\002\000\014\007\011\011" +
    "\012\012\015\024\uffa9\025\uffa9\001\002\000\004\025\153" +
    "\001\002\000\016\006\013\007\011\010\014\011\012\012" +
    "\015\013\145\001\002\000\016\006\013\007\011\010\014" +
    "\011\012\012\015\013\145\001\002\000\006\024\uffab\025" +
    "\uffab\001\002\000\006\024\uffaa\025\uffaa\001\002\000\016" +
    "\006\013\007\011\010\014\011\012\012\015\013\145\001" +
    "\002\000\004\025\155\001\002\000\016\006\013\007\011" +
    "\010\014\011\012\012\015\013\145\001\002\000\004\024" +
    "\157\001\002\000\004\021\uffae\001\002\000\016\006\013" +
    "\007\011\010\014\011\012\012\015\013\145\001\002\000" +
    "\006\024\uffac\025\uffac\001\002\000\004\021\uffc1\001\002" +
    "\000\004\021\uffc0\001\002\000\024\005\133\006\013\007" +
    "\011\010\014\011\012\012\015\013\126\025\127\033\137" +
    "\001\002\000\004\021\uffc2\001\002\000\024\024\071\030" +
    "\075\031\076\046\066\047\074\050\073\051\070\052\072" +
    "\053\067\001\002\000\004\002\uffd7\001\002\000\004\021" +
    "\uffbe\001\002\000\004\021\uffbf\001\002\000\004\002\uffd1" +
    "\001\002\000\004\004\174\001\002\000\022\005\201\006" +
    "\013\007\011\010\014\011\012\012\015\013\175\025\176" +
    "\001\002\000\022\005\201\006\013\007\011\010\014\011" +
    "\012\012\015\013\175\025\176\001\002\000\022\005\201" +
    "\006\013\007\011\010\014\011\012\012\015\013\175\025" +
    "\176\001\002\000\004\021\211\001\002\000\004\025\207" +
    "\001\002\000\004\021\uffc4\001\002\000\004\021\uffca\001" +
    "\002\000\022\005\201\006\013\007\011\010\014\011\012" +
    "\012\015\013\175\025\176\001\002\000\022\005\201\006" +
    "\013\007\011\010\014\011\012\012\015\013\175\025\176" +
    "\001\002\000\004\021\uffc8\001\002\000\004\021\uffc7\001" +
    "\002\000\022\005\201\006\013\007\011\010\014\011\012" +
    "\012\015\013\175\025\176\001\002\000\004\021\uffc9\001" +
    "\002\000\024\024\071\030\075\031\076\046\066\047\074" +
    "\050\073\051\070\052\072\053\067\001\002\000\004\002" +
    "\uffd8\001\002\000\004\021\uffc5\001\002\000\004\021\uffc6" +
    "\001\002\000\020\006\013\007\011\010\014\011\012\012" +
    "\015\013\106\021\111\001\002\000\024\024\071\030\075" +
    "\031\076\046\066\047\074\050\073\051\070\052\072\053" +
    "\067\001\002\000\004\002\uffd6\001\002\000\020\006\013" +
    "\007\011\010\014\011\012\012\015\013\106\021\111\001" +
    "\002\000\024\024\071\030\075\031\076\046\066\047\074" +
    "\050\073\051\070\052\072\053\067\001\002\000\004\002" +
    "\uffd9\001\002\000\004\032\224\001\002\000\020\024\054" +
    "\030\060\031\062\034\056\041\055\042\057\043\063\001" +
    "\002\000\004\002\ufff3\001\002\000\020\024\054\030\060" +
    "\031\062\034\056\041\055\042\057\043\063\001\002\000" +
    "\004\002\ufff4\001\002\000\004\002\ufff0\001\002\000\004" +
    "\013\233\001\002\000\004\025\253\001\002\000\004\017" +
    "\234\001\002\000\024\006\013\007\011\010\014\011\012" +
    "\012\015\013\235\020\240\022\237\027\236\001\002\000" +
    "\006\015\uffb8\025\uffb8\001\002\000\010\007\011\011\012" +
    "\012\015\001\002\000\020\006\013\007\011\010\014\011" +
    "\012\012\015\020\240\027\236\001\002\000\024\006\uffb4" +
    "\007\uffb4\010\uffb4\011\uffb4\012\uffb4\013\uffb4\020\uffb4\022" +
    "\uffb4\027\uffb4\001\002\000\024\006\013\007\011\010\014" +
    "\011\012\012\015\013\235\020\240\022\237\027\236\001" +
    "\002\000\006\015\uffbb\025\uffbb\001\002\000\020\006\013" +
    "\007\011\010\014\011\012\012\015\020\240\027\236\001" +
    "\002\000\020\006\013\007\011\010\014\011\012\012\015" +
    "\020\240\027\236\001\002\000\024\006\uffb7\007\uffb7\010" +
    "\uffb7\011\uffb7\012\uffb7\013\uffb7\020\uffb7\022\uffb7\027\uffb7" +
    "\001\002\000\024\006\uffb5\007\uffb5\010\uffb5\011\uffb5\012" +
    "\uffb5\013\uffb5\020\uffb5\022\uffb5\027\uffb5\001\002\000\006" +
    "\015\uffb9\025\uffb9\001\002\000\024\006\013\007\011\010" +
    "\014\011\012\012\015\013\235\020\240\022\237\027\236" +
    "\001\002\000\006\015\uffba\025\uffba\001\002\000\024\006" +
    "\uffb6\007\uffb6\010\uffb6\011\uffb6\012\uffb6\013\uffb6\020\uffb6" +
    "\022\uffb6\027\uffb6\001\002\000\004\013\233\001\002\000" +
    "\004\015\255\001\002\000\004\021\256\001\002\000\020" +
    "\024\054\030\060\031\062\034\056\041\055\042\057\043" +
    "\063\001\002\000\004\002\ufff6\001\002\000\004\002\ufff2" +
    "\001\002\000\004\032\262\001\002\000\014\024\046\030" +
    "\047\031\044\035\042\036\043\001\002\000\004\002\uffec" +
    "\001\002\000\010\006\013\010\014\033\137\001\002\000" +
    "\020\006\uffe8\007\uffe8\010\uffe8\011\uffe8\012\uffe8\013\uffe8" +
    "\033\uffe8\001\002\000\016\006\013\007\011\010\014\011" +
    "\012\012\015\016\265\001\002\000\016\006\013\007\011" +
    "\010\014\011\012\012\015\016\265\001\002\000\020\006" +
    "\uffea\007\uffea\010\uffea\011\uffea\012\uffea\013\uffea\033\uffea" +
    "\001\002\000\020\006\uffe9\007\uffe9\010\uffe9\011\uffe9\012" +
    "\uffe9\013\uffe9\033\uffe9\001\002\000\004\021\301\001\002" +
    "\000\014\024\046\030\047\031\044\035\042\036\043\001" +
    "\002\000\004\021\277\001\002\000\004\021\276\001\002" +
    "\000\014\024\uffe2\030\uffe2\031\uffe2\035\uffe2\036\uffe2\001" +
    "\002\000\014\024\uffe0\030\uffe0\031\uffe0\035\uffe0\036\uffe0" +
    "\001\002\000\004\002\uffee\001\002\000\014\024\uffe1\030" +
    "\uffe1\031\uffe1\035\uffe1\036\uffe1\001\002\000\016\006\013" +
    "\007\011\010\014\011\012\012\015\013\303\001\002\000" +
    "\012\007\011\011\012\012\015\021\314\001\002\000\004" +
    "\021\313\001\002\000\016\006\013\007\011\010\014\011" +
    "\012\012\015\013\303\001\002\000\014\024\046\030\047" +
    "\031\044\035\042\036\043\001\002\000\016\006\013\007" +
    "\011\010\014\011\012\012\015\013\303\001\002\000\014" +
    "\024\uffe5\030\uffe5\031\uffe5\035\uffe5\036\uffe5\001\002\000" +
    "\004\002\uffef\001\002\000\014\024\uffe4\030\uffe4\031\uffe4" +
    "\035\uffe4\036\uffe4\001\002\000\014\024\uffe7\030\uffe7\031" +
    "\uffe7\035\uffe7\036\uffe7\001\002\000\014\024\uffe3\030\uffe3" +
    "\031\uffe3\035\uffe3\036\uffe3\001\002\000\016\006\013\007" +
    "\011\010\014\011\012\012\015\013\303\001\002\000\014" +
    "\024\uffe6\030\uffe6\031\uffe6\035\uffe6\036\uffe6\001\002\000" +
    "\004\032\320\001\002\000\010\030\034\031\032\037\033" +
    "\001\002\000\004\002\ufffa\001\002\000\004\013\233\001" +
    "\002\000\004\025\324\001\002\000\004\013\233\001\002" +
    "\000\004\015\326\001\002\000\004\021\327\001\002\000" +
    "\012\030\034\031\032\034\031\037\033\001\002\000\004" +
    "\002\uffdf\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\326\000\004\006\005\001\001\000\002\001\001\000" +
    "\010\021\023\022\015\023\007\001\001\000\002\001\001" +
    "\000\010\021\016\022\015\023\007\001\001\000\010\021" +
    "\021\022\015\023\007\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\021\020\022\015\023\007\001\001\000\004" +
    "\006\017\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\025\001\001\000\002\001\001\000\006\002\034\011" +
    "\027\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\021\316\022\015\023\007\001\001\000\004\003\037\001" +
    "\001\000\010\021\035\022\015\023\007\001\001\000\002" +
    "\001\001\000\004\002\036\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\044\001\001\000\010\022\266" +
    "\023\265\034\301\001\001\000\010\022\266\023\265\034" +
    "\263\001\001\000\010\021\260\022\015\023\007\001\001" +
    "\000\002\001\001\000\010\005\052\007\060\024\051\001" +
    "\001\000\010\021\047\022\015\023\007\001\001\000\004" +
    "\017\050\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\004\257\001\001" +
    "\000\002\001\001\000\004\004\227\001\001\000\010\021" +
    "\225\022\015\023\007\001\001\000\002\001\001\000\010" +
    "\021\222\022\015\023\007\001\001\000\004\004\064\001" +
    "\001\000\004\010\076\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\005" +
    "\171\007\060\024\051\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\021\102\022\015\023" +
    "\007\001\001\000\010\021\077\022\015\023\007\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\010\101\001" +
    "\001\000\002\001\001\000\004\010\103\001\001\000\002" +
    "\001\001\000\014\012\106\022\113\023\112\033\107\035" +
    "\111\001\001\000\010\022\113\023\112\035\117\001\001" +
    "\000\004\010\116\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\022\113\023\112\035\115" +
    "\001\001\000\010\022\113\023\112\035\114\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\012\121\022\113\023\112\033\107\035" +
    "\111\001\001\000\004\010\122\001\001\000\002\001\001" +
    "\000\002\001\001\000\016\014\127\016\130\022\135\023" +
    "\134\032\133\033\131\001\001\000\012\016\130\022\135" +
    "\023\134\032\170\001\001\000\012\016\130\022\135\023" +
    "\134\032\167\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\016\130\022\135\023\134\032\162\001\001\000\012" +
    "\016\130\022\135\023\134\032\161\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\022\147\023\146\030\145\001" +
    "\001\000\004\022\157\001\001\000\002\001\001\000\010" +
    "\022\147\023\146\030\151\001\001\000\010\022\147\023" +
    "\146\030\150\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\022\147\023\146\030\153\001\001\000\002\001" +
    "\001\000\010\022\147\023\146\030\155\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\022\147\023\146\030" +
    "\160\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\016\014\164\016\130\022\135\023\134\032" +
    "\133\033\131\001\001\000\002\001\001\000\004\010\166" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\013\176" +
    "\022\203\023\202\031\201\033\177\001\001\000\010\022" +
    "\203\023\202\031\213\001\001\000\010\022\203\023\202" +
    "\031\212\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\022\203\023\202" +
    "\031\205\001\001\000\010\022\203\023\202\031\204\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\013\207" +
    "\022\203\023\202\031\201\033\177\001\001\000\002\001" +
    "\001\000\004\010\211\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\012\215\022\113\023" +
    "\112\033\107\035\111\001\001\000\004\010\216\001\001" +
    "\000\002\001\001\000\014\012\220\022\113\023\112\033" +
    "\107\035\111\001\001\000\004\010\221\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\005\224\007\060\024" +
    "\051\001\001\000\002\001\001\000\010\005\226\007\060" +
    "\024\051\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\015\231\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\020\241\022\243\023\242\027\240\001\001\000" +
    "\002\001\001\000\004\022\251\001\001\000\010\022\243" +
    "\023\242\027\247\001\001\000\002\001\001\000\012\020" +
    "\246\022\243\023\242\027\240\001\001\000\002\001\001" +
    "\000\010\022\243\023\242\027\245\001\001\000\010\022" +
    "\243\023\242\027\244\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\020\250\022\243\023" +
    "\242\027\240\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\015\253\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\005\256\007\060\024\051\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\017" +
    "\262\001\001\000\002\001\001\000\012\016\273\023\271" +
    "\026\272\033\274\001\001\000\002\001\001\000\010\022" +
    "\266\023\265\034\270\001\001\000\010\022\266\023\265" +
    "\034\267\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\277\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\022\306\023\304" +
    "\025\305\033\303\001\001\000\004\022\314\001\001\000" +
    "\002\001\001\000\012\022\306\023\304\025\311\033\303" +
    "\001\001\000\004\017\310\001\001\000\012\022\306\023" +
    "\304\025\307\033\303\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\022\306\023\304\025\315\033\303\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\002\320\001" +
    "\001\000\002\001\001\000\004\015\322\001\001\000\002" +
    "\001\001\000\004\015\324\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\002\034\011\327\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser3$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser3$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser3$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    public void syntax_error(Symbol s){
        System.out.println("Erroe Sintactico en la linea "+s.left+" Columna "+s.right+". No se esperaba este componente: "+s.value+".");
    }

public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error sÃ­ntactico irrecuperable en la LÃ­nea " + 
        (s.left)+ " Columna "+s.right+". Componente " + s.value + 
        " no reconocido."); 
    } 

    



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser3$actions {
  private final parser3 parser;

  /** Constructor */
  CUP$parser3$actions(parser3 parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser3$do_action_part00000000(
    int                        CUP$parser3$act_num,
    java_cup.runtime.lr_parser CUP$parser3$parser,
    java.util.Stack            CUP$parser3$stack,
    int                        CUP$parser3$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser3$result;

      /* select the action based on the action number */
      switch (CUP$parser3$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= InicioPrimero EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		RESULT = start_val;
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser3$parser.done_parsing();
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // InicioPrimero ::= GENERARREPORTEESTADISTICO LLAVE1 PalabraReservadaInstruccion 
            {
              Object RESULT =null;
		int prleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int prright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object pr = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("InicioPrimero",4, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // InicioPrimero ::= COMENTARIOS Comentario InicioPrimero 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("InicioPrimero",4, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // InicioPrimero ::= COMENINICIAL Comentario COMENFINAL InicioPrimero 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("InicioPrimero",4, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Terminacion ::= LLAVE2 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Terminacion",18, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Inicio ::= DEFINIRGLOBALES LlavesAp 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Inicio ::= COMENTARIOS Comentario Inicio 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Inicio ::= COMENINICIAL Comentario COMENFINAL Inicio 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Inicio",0, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // LlavesAp ::= LLAVE1 PalabraReservada 
            {
              Object RESULT =null;
		int prleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int prright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object pr = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesAp",1, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // LlavesGra ::= LLAVE1 PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int prleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int prright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object pr = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesGra",2, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // LlavesFN ::= PalabraInicial 
            {
              Object RESULT =null;
		int pileft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // LlavesFN ::= COMPARE PAR1 Direccion COMA Direccion PAR2 PUNTOYCOMA LlavesFN 
            {
              Object RESULT =null;
		int dic1left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)).left;
		int dic1right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)).right;
		Object dic1 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-5)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-3)).value;
		int pileft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-7)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // LlavesFN ::= Terminacion 
            {
              Object RESULT =null;
		int terleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int terright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object ter = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // LlavesFN ::= COMENTARIOS Comentario LlavesFN 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // LlavesFN ::= COMENINICIAL Comentario COMENFINAL LlavesFN 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("LlavesFN",3, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // PalabraInicial ::= GRAFICABARRAS LlavesGra 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraInicial",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // PalabraInicial ::= GRAFICALINEAS LlavesGra 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraInicial",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // PalabraInicial ::= GRAFICAPIE LlavesGra 
            {
              Object RESULT =null;
		int encleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int encright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object enc = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraInicial",5, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // PalabraReservada ::= STRING Varcaracter CaracterS PalabraReservada 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // PalabraReservada ::= DOUBLE Varcaracter CaracterD PalabraReservada 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // PalabraReservada ::= COMENTARIOS Comentario PalabraReservada 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // PalabraReservada ::= COMENINICIAL Comentario COMENFINAL PalabraReservada 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // PalabraReservada ::= LLAVE2 LlavesFN 
            {
              Object RESULT =null;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object fin = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservada",13, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Varcaracter ::= Alfabeto Varcaracter 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter",26, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Varcaracter ::= Numero Varcaracter 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter",26, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Varcaracter ::= IGUAL 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter",26, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CaracterS ::= VariablesGlobales PUNTOYCOMA 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CaracterS ::= CADENAS Alfabeto CaracterS 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CaracterS ::= Alfabeto CaracterS 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CaracterS ::= Numero CaracterS 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CaracterS ::= CADENAS PUNTOYCOMA 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterS",19, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CaracterD ::= VariablesGlobales PUNTOYCOMA 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterD",20, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CaracterD ::= Numero PUNTOYCOMA 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterD",20, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CaracterD ::= Buscador PUNTOYCOMA 
            {
              Object RESULT =null;
		int busleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int busright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object bus = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterD",20, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // PalabraReservadaInstruccion ::= COMPARE PAR1 Direccion COMA Direccion PAR2 PUNTOYCOMA PalabraReservadaInstruccion 
            {
              Object RESULT =null;
		int dic1left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)).left;
		int dic1right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)).right;
		Object dic1 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-5)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-3)).value;
		int pileft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int piright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object pi = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaInstruccion",7, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-7)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // PalabraReservadaInstruccion ::= Inicio 
            {
              Object RESULT =null;
		int inileft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int iniright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object ini = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaInstruccion",7, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Comentario ::= Alfabeto Comentario 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Comentario ::= Numero Comentario 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Comentario ::= Alfabeto 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Comentario ::= Numero 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Comentario",15, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // PalabraReservadaGrafica ::= TITULO DOSPUNTOS TituloGrafica PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int titleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int titright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object tit = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // PalabraReservadaGrafica ::= EJEX DOSPUNTOS CORCHETE1 EjeVariableX PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // PalabraReservadaGrafica ::= VALORES DOSPUNTOS CORCHETE1 Valor PUNTOYCOMA PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // PalabraReservadaGrafica ::= ARCHIVO DOSPUNTOS TituloGrafica PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int archleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int archright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object arch = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // PalabraReservadaGrafica ::= TITULOX DOSPUNTOS TituloGrafica PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int txleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int txright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object tx = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // PalabraReservadaGrafica ::= TITULOY DOSPUNTOS TituloGrafica PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int tyleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int tyright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object ty = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // PalabraReservadaGrafica ::= COMENTARIOS Comentario PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // PalabraReservadaGrafica ::= COMENINICIAL Comentario COMENFINAL PalabraReservadaGrafica 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object com = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int inicleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int inicright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object inic = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // PalabraReservadaGrafica ::= LLAVE2 LlavesFN 
            {
              Object RESULT =null;
		int finleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int finright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object fin = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("PalabraReservadaGrafica",6, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // TituloGrafica ::= Varcaracter2 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("TituloGrafica",8, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TituloGrafica ::= VariablesGlobales 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("TituloGrafica",8, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Varcaracter2 ::= Alfabeto Varcaracter2 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter2",27, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Varcaracter2 ::= Numero Varcaracter2 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter2",27, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Varcaracter2 ::= CADENAS Varcaracter2 
            {
              Object RESULT =null;
		int varleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int varright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object var = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter2",27, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Varcaracter2 ::= PUNTOYCOMA 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Varcaracter2",27, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // EjeVariableX ::= CaracterX 
            {
              Object RESULT =null;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("EjeVariableX",9, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // EjeVariableX ::= VariablesGlobales COMA EjeVariableX 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("EjeVariableX",9, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // CaracterX ::= Alfabeto CaracterX 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterX",23, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // CaracterX ::= Numero CaracterX 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int esleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int esright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object es = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterX",23, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // CaracterX ::= CADENAS CaracterX 
            {
              Object RESULT =null;
		int esleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int esright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object es = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterX",23, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // CaracterX ::= COMA CaracterX 
            {
              Object RESULT =null;
		int esleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int esright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object es = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterX",23, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // CaracterX ::= CORCHETE2 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterX",23, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Valor ::= CaracterV 
            {
              Object RESULT =null;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Valor",10, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Valor ::= VariablesGlobales COMA Valor 
            {
              Object RESULT =null;
		int vgleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).left;
		int vgright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)).right;
		Object vg = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-2)).value;
		int valleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int valright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object val = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Valor",10, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // CaracterV ::= Alfabeto CaracterV 
            {
              Object RESULT =null;
		int strleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int strright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object str = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int exleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int exright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object ex = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterV",24, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // CaracterV ::= Numero CaracterV 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int esleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int esright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object es = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterV",24, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // CaracterV ::= CADENAS CaracterV 
            {
              Object RESULT =null;
		int esleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int esright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object es = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterV",24, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // CaracterV ::= COMA CaracterV 
            {
              Object RESULT =null;
		int esleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int esright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object es = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterV",24, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // CaracterV ::= CORCHETE2 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterV",24, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // CaracterV ::= Buscador 
            {
              Object RESULT =null;
		int busleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int busright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object bus = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterV",24, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Direccion ::= CADENAS CDM Direccion2 
            {
              Object RESULT =null;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Direccion",11, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Direccion2 ::= DOSPUNTOS CaracterCDM Direccion2 
            {
              Object RESULT =null;
		int car1left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int car1right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object car1 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Direccion2",14, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Direccion2 ::= CaracterCDM Direccion2 
            {
              Object RESULT =null;
		int car1left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int car1right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object car1 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int dic2left = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int dic2right = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object dic2 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Direccion2",14, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Direccion2 ::= CADENAS 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Direccion2",14, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // CaracterCDM ::= Alfabeto CaracterCDM 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterCDM",21, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // CaracterCDM ::= PUNTO Alfabeto 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterCDM",21, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // CaracterCDM ::= Numero CaracterCDM 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterCDM",21, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // CaracterCDM ::= DIVIDIDO 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterCDM",21, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Alfabeto ::= LETRAS 
            {
              Object RESULT =null;
		int letleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int letright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		String let = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		RESULT = new String(let);
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Alfabeto",16, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Alfabeto ::= OTROENTERO 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		RESULT = new Double(ent);
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Alfabeto",16, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Alfabeto ::= COMBINACION 
            {
              Object RESULT =null;
		int comleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int comright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		String com = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		RESULT = new String(com);
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Alfabeto",16, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Numero ::= ENTEROS 
            {
              Object RESULT =null;
		int entleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int entright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		String ent = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		RESULT = new Double(ent);
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Numero",17, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Numero ::= DECIMALES 
            {
              Object RESULT =null;
		int decleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int decright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		String dec = (String)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		RESULT = new Double(dec);
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Numero",17, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Buscador ::= MONEDA LLAVE1 PUNTAJEESPECIFICO COMA CaracterB COMA CaracterB COMA CaracterB LLAVE2 
            {
              Object RESULT =null;
		int car1left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)).left;
		int car1right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-5)).right;
		Object car1 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-5)).value;
		int car2left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).left;
		int car2right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)).right;
		Object car2 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-3)).value;
		int car3left = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int car3right = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object car3 = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Buscador",12, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-9)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Buscador ::= MONEDA LLAVE1 PUNTAJEGENERAL LLAVE2 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("Buscador",12, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-3)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // CaracterB ::= CADENAS Alfabeto CaracterB 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterB",22, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-2)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // CaracterB ::= Alfabeto CaracterB 
            {
              Object RESULT =null;
		int alfleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int alfright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object alf = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterB",22, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // CaracterB ::= Numero CaracterB 
            {
              Object RESULT =null;
		int numleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).left;
		int numright = ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)).right;
		Object num = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.elementAt(CUP$parser3$top-1)).value;
		int carleft = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).left;
		int carright = ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()).right;
		Object car = (Object)((java_cup.runtime.Symbol) CUP$parser3$stack.peek()).value;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterB",22, ((java_cup.runtime.Symbol)CUP$parser3$stack.elementAt(CUP$parser3$top-1)), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // CaracterB ::= CADENAS 
            {
              Object RESULT =null;
		
              CUP$parser3$result = parser.getSymbolFactory().newSymbol("CaracterB",22, ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser3$stack.peek()), RESULT);
            }
          return CUP$parser3$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser3$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser3$do_action(
    int                        CUP$parser3$act_num,
    java_cup.runtime.lr_parser CUP$parser3$parser,
    java.util.Stack            CUP$parser3$stack,
    int                        CUP$parser3$top)
    throws java.lang.Exception
    {
              return CUP$parser3$do_action_part00000000(
                               CUP$parser3$act_num,
                               CUP$parser3$parser,
                               CUP$parser3$stack,
                               CUP$parser3$top);
    }
}

}
